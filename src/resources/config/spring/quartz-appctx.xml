<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	
	 <context:component-scan base-package="com.upath.plat.quartz"/>
	 
	 <!--  扫描 mappers 自动配置 -->    
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
	 <property name="basePackage" value="com.upath.plat.quartz.mapper" /> 
	  <property name="sqlSessionTemplate" ref="sqlSession" />
	  </bean>
	<!-- 拦截器配置管理 -->
	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(public * com.upath.plat.quartz.service.*.*(..))" advice-ref="txAdvice"/>
	</aop:config>
	
	
	<!--采集信息定时任务 开始-->
	<!--每5分钟触发一次  每天晚上八点 每十分钟执行一次-->
	<!-- <bean id="clearLogTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="clearLogJobDetail" />
		<property name="cronExpression" value="0 0/10 20 * * ?"></property>
	</bean> -->
	<!-- <bean id="clearLogJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="clearLogJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean> -->
	
	<bean id="clearLogJob" class="com.upath.plat.common.job.ClearAllLogJob" scope="prototype">
		<property name="service" ref="tRmsAlllogsService"/>
	</bean>
	 
	 <!--每5分钟触发一次  -->
	 <!-- 安全检查中的邮件信息  
	 <bean id="noticeMailTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="noticeMailJobDetail" />
		<property name="cronExpression" value="30 * * * * ?"></property>
	</bean>
	 
	 <bean id="noticeMailJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="noticeMailJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean>
	 	<bean id="noticeMailJob" class="com.deceen.aqjc.notice.job.NoticeMailJob" scope="prototype">
		</bean>
	 -->
	 
	<!-- 每5分钟触发一次  -->
	<!--  <bean id="messagesTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="messagesJobDetail" />
		<property name="cronExpression" value="0 0/2 * * * ?"></property>
	</bean> -->
	 
<!-- 	 <bean id="messagesJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="tMessageJob" />
		<property name="targetMethod" value="run" />
		<property name="concurrent" value="false" />
	</bean> -->
	 
 	<bean id="tMessageJob" class="com.upath.plat.common.job.MessageJobs" scope="prototype">
		<property name="service" ref="tCommonMessagesService"/>
		<property name="mailSender" ref="mailSender"/>
	</bean>
	 
	 <bean id="mailSender" class="com.upath.plat.common.mail.MailSenderImpl" scope="prototype" />
	 <bean id="tCommonMessagesService" class="com.upath.plat.common.modules.service.TCommonMessagesService" scope="prototype" />
	
<!-- 	   <bean id="scheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean"
		autowire="no">
		<property name="triggers">
			<list>	
		
		 	  	
		 	  <ref bean="noticeMailTrigger" />
		 	  <ref bean="messagesTrigger" />
		 	
				
				   <ref bean="clearLogTrigger" />
			</list>
		</property>
	</bean> -->
	 
	 
	 
    <!-- 
    	关于cronExpression表达式，这里讲解一下： 
		字段 允许值 允许的特殊字符 
		每天的8点到21点每隔1分钟触发，具体说明见附录  0 * 08-21 * * ?
		秒 0-59 , - * / 
		分 0-59 , - * / 
		小时 0-23 , - * / 
		日期 1-31 , - * ? / L W C 
		月份 1-12 或者 JAN-DEC , - * / 
		星期 1-7 或者 SUN-SAT , - * ? / L C # 
		年（可选） 留空, 1970-2099 , - * / 
		表达式意义 
		"0 0 12 * * ?" 每天中午12点触发 
		"0 15 10 ? * *" 每天上午10:15触发 
		"0 15 10 * * ?" 每天上午10:15触发 
		"0 15 10 * * ? *" 每天上午10:15触发 
		"0 15 10 * * ? 2005" 2005年的每天上午10:15触发 
		"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发 
		"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发 
		"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发 
		"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发 
		"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发 
		"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发 
		"0 15 10 15 * ?" 每月15日上午10:15触发 
		"0 15 10 L * ?" 每月最后一日的上午10:15触发 
		"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发 
		"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发 
		"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发 
		每天早上6点 
		0 6 * * * 
		每两个小时 
		0 */2 * * * 
		晚上11点到早上8点之间每两个小时，早上八点 
		0 23-7/2，8 * * * 
		每个月的4号和每个礼拜的礼拜一到礼拜三的早上11点 
		0 11 4 * 1-3 
		1月1日早上4点 
		0 4 1 1 * 
     -->

    <!-- 计算推荐售价定时器 end -->
</beans>